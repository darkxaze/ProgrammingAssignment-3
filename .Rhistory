install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args()
args(list.files)
old.dir<-dir()
old.dir<-getwd()
dir.create(testdir)
?dir.create()
testdir<-dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R",folder1,folder2)
args(file.path)
file.path("folder1", "folder2")
?dir.create
file.path(dir.create("testdir2","testdir3",showWarnings = TRUE, recursive = TRUE, mode = "0777")))
file.path(dir.create("testdir2","testdir3",showWarnings = TRUE, recursive = TRUE, mode = "0777"))
dir.create(file.path("testdir2","testdir3"),showWarnings = TRUE, recursive = TRUE, mode = "0777")
setwd("testdir")
setwd("old.dir")
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect?=6
num_vect<=6
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Srivatsan")
my_name<-c(my_char, "Srivatsan")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1,2,3),c("X","Y","Z"), sep = "")
aste(1:3, c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar =
| 2, norf = NA)
vect <- c(foo = 11, bar =2, norf = NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2)<-c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20 nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
my_matrix2<-matrix(1:20 nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3"))
my_matrix2<-matrix(1:20, nrow = 2, ncol = 3)
my_matrix2<-matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients<-c("Bill",""Gina"", "Kelly","Sean")
patients<-c("Bill",""Gina"","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age","weight", "bp", "rating", "test")
?colnames
colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2, 4, 5))
submit()
source('C:/Users/NASTAV~1/AppData/Local/Temp/Rtmpu2LMM3/boring_function.R')
swirl()
View(y)
source('C:/Users/NASTAV~1/AppData/Local/Temp/Rtmpu2LMM3/boring_function.R')
submit()
boring_function('My first function!')
boring_function
source('C:/Users/NASTAV~1/AppData/Local/Temp/Rtmpu2LMM3/my_mean.R')
Submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
install.packages(c("askpass", "backports", "BH", "bit", "bit64", "bitops", "blob", "caTools", "cli", "clipr", "config", "crayon", "curl", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "generics", "glue", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "magrittr", "markdown", "mime", "mongolite", "odbc", "openssl", "packrat", "pillar", "pkgconfig", "PKI", "prettyunits", "profvis", "progress", "promises", "purrr", "r2d3", "R6", "rappdirs", "Rcpp", "RCurl", "readr", "rJava", "RJDBC", "RJSONIO", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "utf8", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "bit64", "bitops", "blob", "caTools", "cli", "clipr", "config", "crayon", "curl", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "generics", "glue", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "magrittr", "markdown", "mime", "mongolite", "odbc", "openssl", "packrat", "pillar", "pkgconfig", "PKI", "prettyunits", "profvis", "progress", "promises", "purrr", "r2d3", "R6", "rappdirs", "Rcpp", "RCurl", "readr", "rJava", "RJDBC", "RJSONIO", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "utf8", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "bit64", "bitops", "blob", "caTools", "cli", "clipr", "config", "crayon", "curl", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "generics", "glue", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "magrittr", "markdown", "mime", "mongolite", "odbc", "openssl", "packrat", "pillar", "pkgconfig", "PKI", "prettyunits", "profvis", "progress", "promises", "purrr", "r2d3", "R6", "rappdirs", "Rcpp", "RCurl", "readr", "rJava", "RJDBC", "RJSONIO", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "utf8", "xfun", "xml2", "yaml"))
install.packages(c("askpass", "backports", "BH", "bit", "bit64", "bitops", "blob", "caTools", "cli", "clipr", "config", "crayon", "curl", "DBI", "dbplyr", "digest", "dplyr", "evaluate", "fansi", "forcats", "generics", "glue", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "magrittr", "markdown", "mime", "mongolite", "odbc", "openssl", "packrat", "pillar", "pkgconfig", "PKI", "prettyunits", "profvis", "progress", "promises", "purrr", "r2d3", "R6", "rappdirs", "Rcpp", "RCurl", "readr", "rJava", "RJDBC", "RJSONIO", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "shiny", "sparklyr", "stringi", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "utf8", "xfun", "xml2", "yaml"))
source('~/.active-rstudio-document')
source('D:/data science/John Hopkins -DS/datasciencecoursera/Rprog/week-2.R')
source('D:/data science/John Hopkins -DS/datasciencecoursera/Rprog/week-2.R')
pollutantmean("specdata", "sulfate", 1:10)
data <- x$get()
source('D:/data science/John Hopkins -DS/datasciencecoursera/ProgrammingAssignment2-master/cachematrix.R')
source('D:/data science/John Hopkins -DS/datasciencecoursera/ProgrammingAssignment2-master/ProgrammingAssignment2/cachematrix.R')
source('D:/data science/John Hopkins -DS/datasciencecoursera/ProgrammingAssignment2-master/ProgrammingAssignment2/cachematrix.R')
source('D:/data science/John Hopkins -DS/datasciencecoursera/ProgrammingAssignment2-master/ProgrammingAssignment2/cachematrix.R')
install.packages("swirl")
library("swirl")
install.packages(c("askpass", "backports", "BH", "bit", "bit64", "bitops", "blob", "boot", "broom", "cachem", "callr", "caret", "caTools", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "config", "crayon", "curl", "data.table", "DBI", "dbplyr", "desc", "digest", "dplyr", "ellipsis", "evaluate", "fansi", "forcats", "foreach", "formatR", "fs", "generics", "ggplot2", "glmnet", "glue", "gower", "haven", "hexbin", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "ipred", "IRdisplay", "IRkernel", "iterators", "jsonlite", "KernSmooth", "knitr", "labeling", "later", "lattice", "lava", "lifecycle", "lubridate", "magrittr", "maps", "markdown", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "modelr", "mongolite", "nlme", "nnet", "numDeriv", "odbc", "openssl", "packrat", "pbdZMQ", "pillar", "pkgconfig", "PKI", "plyr", "prettyunits", "processx", "prodlim", "profvis", "progress", "promises", "ps", "purrr", "quantmod", "r2d3", "R6", "rappdirs", "Rcpp", "RCurl", "readr", "recipes", "repr", "reprex", "reshape2", "rJava", "RJDBC", "RJSONIO", "rlang", "rmarkdown", "rprojroot", "rsconnect", "rstudioapi", "rvest", "scales", "selectr", "shiny", "sparklyr", "spatial", "SQUAREM", "stringi", "survival", "sys", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "TTR", "tzdb", "utf8", "uuid", "viridisLite", "vroom", "whisker", "withr", "xfun", "xml2", "xts", "yaml", "zoo"))
library("swirl")
rm(list=ls())
swirl()
c=1:20
my_vector=1:20
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?`matrix-
matrix
?matrix
my_matrix2=matrix(1:20,nrow=4,nvol=5)
my_matrix2=matrix(1:20,nrow=4,ncol=5)
identical(my_matrix2,my_matrix)
bye()
swirl()
bye()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list\
cls_list
class(cls_list)
as.character(cls_list)
>sapply
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors
head(flag_colors)
getwd()
setwd("D:/data science/John Hopkins -DS/datasciencecoursera/ProgrammingAssignment3")
